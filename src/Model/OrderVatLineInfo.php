<?php
/**
 * OrderVatLineInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  Seacommerce\Unit4\Multivers\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UNIT4 Multivers WebApi
 *
 * Unofficial SDK for the UNIT4 Multivers WebApi version 1.10.0 (by Seacommerce).
 *
 * OpenAPI spec version: 1.10.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Seacommerce\Unit4\Multivers\Sdk\Model;

use \ArrayAccess;
use \Seacommerce\Unit4\Multivers\Sdk\ObjectSerializer;

/**
 * OrderVatLineInfo Class Doc Comment
 *
 * @category Class
 * @package  Seacommerce\Unit4\Multivers\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderVatLineInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderVatLineInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'creditSqueezeAmount' => 'float',
        'creditSqueezePercentage' => 'float',
        'discountAmount' => 'float',
        'goodsAmount' => 'float',
        'vatAmount' => 'float',
        'vatBaseAmount' => 'float',
        'vatCodeId' => 'int',
        'vatPercentage' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'creditSqueezeAmount' => null,
        'creditSqueezePercentage' => null,
        'discountAmount' => null,
        'goodsAmount' => null,
        'vatAmount' => null,
        'vatBaseAmount' => null,
        'vatCodeId' => 'int32',
        'vatPercentage' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'creditSqueezeAmount' => 'creditSqueezeAmount',
        'creditSqueezePercentage' => 'creditSqueezePercentage',
        'discountAmount' => 'discountAmount',
        'goodsAmount' => 'goodsAmount',
        'vatAmount' => 'vatAmount',
        'vatBaseAmount' => 'vatBaseAmount',
        'vatCodeId' => 'vatCodeId',
        'vatPercentage' => 'vatPercentage'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'creditSqueezeAmount' => 'setCreditSqueezeAmount',
        'creditSqueezePercentage' => 'setCreditSqueezePercentage',
        'discountAmount' => 'setDiscountAmount',
        'goodsAmount' => 'setGoodsAmount',
        'vatAmount' => 'setVatAmount',
        'vatBaseAmount' => 'setVatBaseAmount',
        'vatCodeId' => 'setVatCodeId',
        'vatPercentage' => 'setVatPercentage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'creditSqueezeAmount' => 'getCreditSqueezeAmount',
        'creditSqueezePercentage' => 'getCreditSqueezePercentage',
        'discountAmount' => 'getDiscountAmount',
        'goodsAmount' => 'getGoodsAmount',
        'vatAmount' => 'getVatAmount',
        'vatBaseAmount' => 'getVatBaseAmount',
        'vatCodeId' => 'getVatCodeId',
        'vatPercentage' => 'getVatPercentage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['creditSqueezeAmount'] = isset($data['creditSqueezeAmount']) ? $data['creditSqueezeAmount'] : null;
        $this->container['creditSqueezePercentage'] = isset($data['creditSqueezePercentage']) ? $data['creditSqueezePercentage'] : null;
        $this->container['discountAmount'] = isset($data['discountAmount']) ? $data['discountAmount'] : null;
        $this->container['goodsAmount'] = isset($data['goodsAmount']) ? $data['goodsAmount'] : null;
        $this->container['vatAmount'] = isset($data['vatAmount']) ? $data['vatAmount'] : null;
        $this->container['vatBaseAmount'] = isset($data['vatBaseAmount']) ? $data['vatBaseAmount'] : null;
        $this->container['vatCodeId'] = isset($data['vatCodeId']) ? $data['vatCodeId'] : null;
        $this->container['vatPercentage'] = isset($data['vatPercentage']) ? $data['vatPercentage'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets creditSqueezeAmount
     *
     * @return float|null
     */
    public function getCreditSqueezeAmount()
    {
        return $this->container['creditSqueezeAmount'];
    }

    /**
     * Sets creditSqueezeAmount
     *
     * @param float|null $creditSqueezeAmount creditSqueezeAmount
     *
     * @return $this
     */
    public function setCreditSqueezeAmount($creditSqueezeAmount)
    {
        $this->container['creditSqueezeAmount'] = $creditSqueezeAmount;

        return $this;
    }

    /**
     * Gets creditSqueezePercentage
     *
     * @return float|null
     */
    public function getCreditSqueezePercentage()
    {
        return $this->container['creditSqueezePercentage'];
    }

    /**
     * Sets creditSqueezePercentage
     *
     * @param float|null $creditSqueezePercentage creditSqueezePercentage
     *
     * @return $this
     */
    public function setCreditSqueezePercentage($creditSqueezePercentage)
    {
        $this->container['creditSqueezePercentage'] = $creditSqueezePercentage;

        return $this;
    }

    /**
     * Gets discountAmount
     *
     * @return float|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     *
     * @param float|null $discountAmount discountAmount
     *
     * @return $this
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets goodsAmount
     *
     * @return float|null
     */
    public function getGoodsAmount()
    {
        return $this->container['goodsAmount'];
    }

    /**
     * Sets goodsAmount
     *
     * @param float|null $goodsAmount goodsAmount
     *
     * @return $this
     */
    public function setGoodsAmount($goodsAmount)
    {
        $this->container['goodsAmount'] = $goodsAmount;

        return $this;
    }

    /**
     * Gets vatAmount
     *
     * @return float|null
     */
    public function getVatAmount()
    {
        return $this->container['vatAmount'];
    }

    /**
     * Sets vatAmount
     *
     * @param float|null $vatAmount vatAmount
     *
     * @return $this
     */
    public function setVatAmount($vatAmount)
    {
        $this->container['vatAmount'] = $vatAmount;

        return $this;
    }

    /**
     * Gets vatBaseAmount
     *
     * @return float|null
     */
    public function getVatBaseAmount()
    {
        return $this->container['vatBaseAmount'];
    }

    /**
     * Sets vatBaseAmount
     *
     * @param float|null $vatBaseAmount vatBaseAmount
     *
     * @return $this
     */
    public function setVatBaseAmount($vatBaseAmount)
    {
        $this->container['vatBaseAmount'] = $vatBaseAmount;

        return $this;
    }

    /**
     * Gets vatCodeId
     *
     * @return int|null
     */
    public function getVatCodeId()
    {
        return $this->container['vatCodeId'];
    }

    /**
     * Sets vatCodeId
     *
     * @param int|null $vatCodeId vatCodeId
     *
     * @return $this
     */
    public function setVatCodeId($vatCodeId)
    {
        $this->container['vatCodeId'] = $vatCodeId;

        return $this;
    }

    /**
     * Gets vatPercentage
     *
     * @return float|null
     */
    public function getVatPercentage()
    {
        return $this->container['vatPercentage'];
    }

    /**
     * Sets vatPercentage
     *
     * @param float|null $vatPercentage vatPercentage
     *
     * @return $this
     */
    public function setVatPercentage($vatPercentage)
    {
        $this->container['vatPercentage'] = $vatPercentage;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


