<?php
/**
 * OrderInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  Seacommerce\Unit4\Multivers\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * UNIT4 Multivers WebApi
 *
 * Unofficial SDK for the UNIT4 Multivers WebApi version 1.10.0 (by Seacommerce).
 *
 * OpenAPI spec version: 1.10.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Seacommerce\Unit4\Multivers\Sdk\Model;

use \ArrayAccess;
use \Seacommerce\Unit4\Multivers\Sdk\ObjectSerializer;

/**
 * OrderInfo Class Doc Comment
 *
 * @category Class
 * @package  Seacommerce\Unit4\Multivers\Sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accountManager' => 'string',
        'accountManagerId' => 'string',
        'amountExclVat' => 'float',
        'amountInclVat' => 'float',
        'cargoWeight' => 'float',
        'chargeVatType' => 'int',
        'collectiveInvoiceSystemId' => 'string',
        'contactPerson' => 'string',
        'contactPersonId' => 'string',
        'costCentreId' => 'string',
        'costUnitId' => 'string',
        'countryOfDestinationId' => 'string',
        'creditSqueezeAmount' => 'float',
        'creditSqueezePercentage' => 'float',
        'currencyDescription' => 'string',
        'currencyId' => 'string',
        'currencyIsoCurrencyId' => 'string',
        'customerId' => 'string',
        'customerIdForInvoice' => 'string',
        'customerName' => 'string',
        'deliveryAddress' => 'string',
        'deliveryAddressId' => 'int',
        'deliveryConditionDescription' => 'string',
        'deliveryConditionId' => 'string',
        'discountAmount' => 'float',
        'discountPercentage' => 'float',
        'fiscalYear' => 'int',
        'goodsFlowId' => 'int',
        'invoiceAddress' => 'string',
        'invoiceDate' => 'string',
        'invoiceId' => 'string',
        'isApproved' => 'bool',
        'isBlocked' => 'bool',
        'isBlockedByMargin' => 'bool',
        'journalId' => 'string',
        'languageId' => 'string',
        'mainOrderId' => 'string',
        'orderDate' => 'string',
        'orderId' => 'string',
        'orderLines' => '\Seacommerce\Unit4\Multivers\Sdk\Model\OrderLineInfo[]',
        'orderType' => 'string',
        'orderVatLines' => '\Seacommerce\Unit4\Multivers\Sdk\Model\OrderVatLineInfo[]',
        'packages' => 'int',
        'pallets' => 'int',
        'paymentAmount1' => 'float',
        'paymentAmount2' => 'float',
        'paymentConditionDescription' => 'string',
        'paymentConditionId' => 'string',
        'paymentDiscountAmount' => 'float',
        'paymentDiscountPercentage' => 'float',
        'paymentId1' => 'string',
        'paymentId2' => 'string',
        'periodNumber' => 'int',
        'printCounter' => 'int',
        'processedBy' => 'string',
        'processedById' => 'string',
        'projectId' => 'string',
        'projectOrderInvoicingType' => 'int',
        'purchaseOrganizationMemberId' => 'string',
        'reference' => 'string',
        'regionId' => 'int',
        'shippingAgentId' => 'string',
        'stateId' => 'string',
        'statisticalSystemIdOfGoodsFlow' => 'int',
        'subscriptionId' => 'string',
        'totalMarginAmount' => 'float',
        'totalMarginPercentage' => 'float',
        'transactionTypeId' => 'int',
        'transportById' => 'int',
        'vatAmount' => 'float',
        'vatScenarioId' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'accountManager' => null,
        'accountManagerId' => null,
        'amountExclVat' => null,
        'amountInclVat' => null,
        'cargoWeight' => null,
        'chargeVatType' => 'int32',
        'collectiveInvoiceSystemId' => null,
        'contactPerson' => null,
        'contactPersonId' => null,
        'costCentreId' => null,
        'costUnitId' => null,
        'countryOfDestinationId' => null,
        'creditSqueezeAmount' => null,
        'creditSqueezePercentage' => null,
        'currencyDescription' => null,
        'currencyId' => null,
        'currencyIsoCurrencyId' => null,
        'customerId' => null,
        'customerIdForInvoice' => null,
        'customerName' => null,
        'deliveryAddress' => null,
        'deliveryAddressId' => 'int32',
        'deliveryConditionDescription' => null,
        'deliveryConditionId' => null,
        'discountAmount' => null,
        'discountPercentage' => null,
        'fiscalYear' => 'int32',
        'goodsFlowId' => 'int32',
        'invoiceAddress' => null,
        'invoiceDate' => null,
        'invoiceId' => null,
        'isApproved' => null,
        'isBlocked' => null,
        'isBlockedByMargin' => null,
        'journalId' => null,
        'languageId' => null,
        'mainOrderId' => null,
        'orderDate' => null,
        'orderId' => null,
        'orderLines' => null,
        'orderType' => null,
        'orderVatLines' => null,
        'packages' => 'int32',
        'pallets' => 'int32',
        'paymentAmount1' => null,
        'paymentAmount2' => null,
        'paymentConditionDescription' => null,
        'paymentConditionId' => null,
        'paymentDiscountAmount' => null,
        'paymentDiscountPercentage' => null,
        'paymentId1' => null,
        'paymentId2' => null,
        'periodNumber' => 'int32',
        'printCounter' => 'int32',
        'processedBy' => null,
        'processedById' => null,
        'projectId' => null,
        'projectOrderInvoicingType' => 'int32',
        'purchaseOrganizationMemberId' => null,
        'reference' => null,
        'regionId' => 'int32',
        'shippingAgentId' => null,
        'stateId' => null,
        'statisticalSystemIdOfGoodsFlow' => 'int32',
        'subscriptionId' => null,
        'totalMarginAmount' => null,
        'totalMarginPercentage' => null,
        'transactionTypeId' => 'int32',
        'transportById' => 'int32',
        'vatAmount' => null,
        'vatScenarioId' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountManager' => 'accountManager',
        'accountManagerId' => 'accountManagerId',
        'amountExclVat' => 'amountExclVat',
        'amountInclVat' => 'amountInclVat',
        'cargoWeight' => 'cargoWeight',
        'chargeVatType' => 'chargeVatType',
        'collectiveInvoiceSystemId' => 'collectiveInvoiceSystemId',
        'contactPerson' => 'contactPerson',
        'contactPersonId' => 'contactPersonId',
        'costCentreId' => 'costCentreId',
        'costUnitId' => 'costUnitId',
        'countryOfDestinationId' => 'countryOfDestinationId',
        'creditSqueezeAmount' => 'creditSqueezeAmount',
        'creditSqueezePercentage' => 'creditSqueezePercentage',
        'currencyDescription' => 'currencyDescription',
        'currencyId' => 'currencyId',
        'currencyIsoCurrencyId' => 'currencyIsoCurrencyId',
        'customerId' => 'customerId',
        'customerIdForInvoice' => 'customerIdForInvoice',
        'customerName' => 'customerName',
        'deliveryAddress' => 'deliveryAddress',
        'deliveryAddressId' => 'deliveryAddressId',
        'deliveryConditionDescription' => 'deliveryConditionDescription',
        'deliveryConditionId' => 'deliveryConditionId',
        'discountAmount' => 'discountAmount',
        'discountPercentage' => 'discountPercentage',
        'fiscalYear' => 'fiscalYear',
        'goodsFlowId' => 'goodsFlowId',
        'invoiceAddress' => 'invoiceAddress',
        'invoiceDate' => 'invoiceDate',
        'invoiceId' => 'invoiceId',
        'isApproved' => 'isApproved',
        'isBlocked' => 'isBlocked',
        'isBlockedByMargin' => 'isBlockedByMargin',
        'journalId' => 'journalId',
        'languageId' => 'languageId',
        'mainOrderId' => 'mainOrderId',
        'orderDate' => 'orderDate',
        'orderId' => 'orderId',
        'orderLines' => 'orderLines',
        'orderType' => 'orderType',
        'orderVatLines' => 'orderVatLines',
        'packages' => 'packages',
        'pallets' => 'pallets',
        'paymentAmount1' => 'paymentAmount1',
        'paymentAmount2' => 'paymentAmount2',
        'paymentConditionDescription' => 'paymentConditionDescription',
        'paymentConditionId' => 'paymentConditionId',
        'paymentDiscountAmount' => 'paymentDiscountAmount',
        'paymentDiscountPercentage' => 'paymentDiscountPercentage',
        'paymentId1' => 'paymentId1',
        'paymentId2' => 'paymentId2',
        'periodNumber' => 'periodNumber',
        'printCounter' => 'printCounter',
        'processedBy' => 'processedBy',
        'processedById' => 'processedById',
        'projectId' => 'projectId',
        'projectOrderInvoicingType' => 'projectOrderInvoicingType',
        'purchaseOrganizationMemberId' => 'purchaseOrganizationMemberId',
        'reference' => 'reference',
        'regionId' => 'regionId',
        'shippingAgentId' => 'shippingAgentId',
        'stateId' => 'stateId',
        'statisticalSystemIdOfGoodsFlow' => 'statisticalSystemIdOfGoodsFlow',
        'subscriptionId' => 'subscriptionId',
        'totalMarginAmount' => 'totalMarginAmount',
        'totalMarginPercentage' => 'totalMarginPercentage',
        'transactionTypeId' => 'transactionTypeId',
        'transportById' => 'transportById',
        'vatAmount' => 'vatAmount',
        'vatScenarioId' => 'vatScenarioId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountManager' => 'setAccountManager',
        'accountManagerId' => 'setAccountManagerId',
        'amountExclVat' => 'setAmountExclVat',
        'amountInclVat' => 'setAmountInclVat',
        'cargoWeight' => 'setCargoWeight',
        'chargeVatType' => 'setChargeVatType',
        'collectiveInvoiceSystemId' => 'setCollectiveInvoiceSystemId',
        'contactPerson' => 'setContactPerson',
        'contactPersonId' => 'setContactPersonId',
        'costCentreId' => 'setCostCentreId',
        'costUnitId' => 'setCostUnitId',
        'countryOfDestinationId' => 'setCountryOfDestinationId',
        'creditSqueezeAmount' => 'setCreditSqueezeAmount',
        'creditSqueezePercentage' => 'setCreditSqueezePercentage',
        'currencyDescription' => 'setCurrencyDescription',
        'currencyId' => 'setCurrencyId',
        'currencyIsoCurrencyId' => 'setCurrencyIsoCurrencyId',
        'customerId' => 'setCustomerId',
        'customerIdForInvoice' => 'setCustomerIdForInvoice',
        'customerName' => 'setCustomerName',
        'deliveryAddress' => 'setDeliveryAddress',
        'deliveryAddressId' => 'setDeliveryAddressId',
        'deliveryConditionDescription' => 'setDeliveryConditionDescription',
        'deliveryConditionId' => 'setDeliveryConditionId',
        'discountAmount' => 'setDiscountAmount',
        'discountPercentage' => 'setDiscountPercentage',
        'fiscalYear' => 'setFiscalYear',
        'goodsFlowId' => 'setGoodsFlowId',
        'invoiceAddress' => 'setInvoiceAddress',
        'invoiceDate' => 'setInvoiceDate',
        'invoiceId' => 'setInvoiceId',
        'isApproved' => 'setIsApproved',
        'isBlocked' => 'setIsBlocked',
        'isBlockedByMargin' => 'setIsBlockedByMargin',
        'journalId' => 'setJournalId',
        'languageId' => 'setLanguageId',
        'mainOrderId' => 'setMainOrderId',
        'orderDate' => 'setOrderDate',
        'orderId' => 'setOrderId',
        'orderLines' => 'setOrderLines',
        'orderType' => 'setOrderType',
        'orderVatLines' => 'setOrderVatLines',
        'packages' => 'setPackages',
        'pallets' => 'setPallets',
        'paymentAmount1' => 'setPaymentAmount1',
        'paymentAmount2' => 'setPaymentAmount2',
        'paymentConditionDescription' => 'setPaymentConditionDescription',
        'paymentConditionId' => 'setPaymentConditionId',
        'paymentDiscountAmount' => 'setPaymentDiscountAmount',
        'paymentDiscountPercentage' => 'setPaymentDiscountPercentage',
        'paymentId1' => 'setPaymentId1',
        'paymentId2' => 'setPaymentId2',
        'periodNumber' => 'setPeriodNumber',
        'printCounter' => 'setPrintCounter',
        'processedBy' => 'setProcessedBy',
        'processedById' => 'setProcessedById',
        'projectId' => 'setProjectId',
        'projectOrderInvoicingType' => 'setProjectOrderInvoicingType',
        'purchaseOrganizationMemberId' => 'setPurchaseOrganizationMemberId',
        'reference' => 'setReference',
        'regionId' => 'setRegionId',
        'shippingAgentId' => 'setShippingAgentId',
        'stateId' => 'setStateId',
        'statisticalSystemIdOfGoodsFlow' => 'setStatisticalSystemIdOfGoodsFlow',
        'subscriptionId' => 'setSubscriptionId',
        'totalMarginAmount' => 'setTotalMarginAmount',
        'totalMarginPercentage' => 'setTotalMarginPercentage',
        'transactionTypeId' => 'setTransactionTypeId',
        'transportById' => 'setTransportById',
        'vatAmount' => 'setVatAmount',
        'vatScenarioId' => 'setVatScenarioId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountManager' => 'getAccountManager',
        'accountManagerId' => 'getAccountManagerId',
        'amountExclVat' => 'getAmountExclVat',
        'amountInclVat' => 'getAmountInclVat',
        'cargoWeight' => 'getCargoWeight',
        'chargeVatType' => 'getChargeVatType',
        'collectiveInvoiceSystemId' => 'getCollectiveInvoiceSystemId',
        'contactPerson' => 'getContactPerson',
        'contactPersonId' => 'getContactPersonId',
        'costCentreId' => 'getCostCentreId',
        'costUnitId' => 'getCostUnitId',
        'countryOfDestinationId' => 'getCountryOfDestinationId',
        'creditSqueezeAmount' => 'getCreditSqueezeAmount',
        'creditSqueezePercentage' => 'getCreditSqueezePercentage',
        'currencyDescription' => 'getCurrencyDescription',
        'currencyId' => 'getCurrencyId',
        'currencyIsoCurrencyId' => 'getCurrencyIsoCurrencyId',
        'customerId' => 'getCustomerId',
        'customerIdForInvoice' => 'getCustomerIdForInvoice',
        'customerName' => 'getCustomerName',
        'deliveryAddress' => 'getDeliveryAddress',
        'deliveryAddressId' => 'getDeliveryAddressId',
        'deliveryConditionDescription' => 'getDeliveryConditionDescription',
        'deliveryConditionId' => 'getDeliveryConditionId',
        'discountAmount' => 'getDiscountAmount',
        'discountPercentage' => 'getDiscountPercentage',
        'fiscalYear' => 'getFiscalYear',
        'goodsFlowId' => 'getGoodsFlowId',
        'invoiceAddress' => 'getInvoiceAddress',
        'invoiceDate' => 'getInvoiceDate',
        'invoiceId' => 'getInvoiceId',
        'isApproved' => 'getIsApproved',
        'isBlocked' => 'getIsBlocked',
        'isBlockedByMargin' => 'getIsBlockedByMargin',
        'journalId' => 'getJournalId',
        'languageId' => 'getLanguageId',
        'mainOrderId' => 'getMainOrderId',
        'orderDate' => 'getOrderDate',
        'orderId' => 'getOrderId',
        'orderLines' => 'getOrderLines',
        'orderType' => 'getOrderType',
        'orderVatLines' => 'getOrderVatLines',
        'packages' => 'getPackages',
        'pallets' => 'getPallets',
        'paymentAmount1' => 'getPaymentAmount1',
        'paymentAmount2' => 'getPaymentAmount2',
        'paymentConditionDescription' => 'getPaymentConditionDescription',
        'paymentConditionId' => 'getPaymentConditionId',
        'paymentDiscountAmount' => 'getPaymentDiscountAmount',
        'paymentDiscountPercentage' => 'getPaymentDiscountPercentage',
        'paymentId1' => 'getPaymentId1',
        'paymentId2' => 'getPaymentId2',
        'periodNumber' => 'getPeriodNumber',
        'printCounter' => 'getPrintCounter',
        'processedBy' => 'getProcessedBy',
        'processedById' => 'getProcessedById',
        'projectId' => 'getProjectId',
        'projectOrderInvoicingType' => 'getProjectOrderInvoicingType',
        'purchaseOrganizationMemberId' => 'getPurchaseOrganizationMemberId',
        'reference' => 'getReference',
        'regionId' => 'getRegionId',
        'shippingAgentId' => 'getShippingAgentId',
        'stateId' => 'getStateId',
        'statisticalSystemIdOfGoodsFlow' => 'getStatisticalSystemIdOfGoodsFlow',
        'subscriptionId' => 'getSubscriptionId',
        'totalMarginAmount' => 'getTotalMarginAmount',
        'totalMarginPercentage' => 'getTotalMarginPercentage',
        'transactionTypeId' => 'getTransactionTypeId',
        'transportById' => 'getTransportById',
        'vatAmount' => 'getVatAmount',
        'vatScenarioId' => 'getVatScenarioId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountManager'] = isset($data['accountManager']) ? $data['accountManager'] : null;
        $this->container['accountManagerId'] = isset($data['accountManagerId']) ? $data['accountManagerId'] : null;
        $this->container['amountExclVat'] = isset($data['amountExclVat']) ? $data['amountExclVat'] : null;
        $this->container['amountInclVat'] = isset($data['amountInclVat']) ? $data['amountInclVat'] : null;
        $this->container['cargoWeight'] = isset($data['cargoWeight']) ? $data['cargoWeight'] : null;
        $this->container['chargeVatType'] = isset($data['chargeVatType']) ? $data['chargeVatType'] : null;
        $this->container['collectiveInvoiceSystemId'] = isset($data['collectiveInvoiceSystemId']) ? $data['collectiveInvoiceSystemId'] : null;
        $this->container['contactPerson'] = isset($data['contactPerson']) ? $data['contactPerson'] : null;
        $this->container['contactPersonId'] = isset($data['contactPersonId']) ? $data['contactPersonId'] : null;
        $this->container['costCentreId'] = isset($data['costCentreId']) ? $data['costCentreId'] : null;
        $this->container['costUnitId'] = isset($data['costUnitId']) ? $data['costUnitId'] : null;
        $this->container['countryOfDestinationId'] = isset($data['countryOfDestinationId']) ? $data['countryOfDestinationId'] : null;
        $this->container['creditSqueezeAmount'] = isset($data['creditSqueezeAmount']) ? $data['creditSqueezeAmount'] : null;
        $this->container['creditSqueezePercentage'] = isset($data['creditSqueezePercentage']) ? $data['creditSqueezePercentage'] : null;
        $this->container['currencyDescription'] = isset($data['currencyDescription']) ? $data['currencyDescription'] : null;
        $this->container['currencyId'] = isset($data['currencyId']) ? $data['currencyId'] : null;
        $this->container['currencyIsoCurrencyId'] = isset($data['currencyIsoCurrencyId']) ? $data['currencyIsoCurrencyId'] : null;
        $this->container['customerId'] = isset($data['customerId']) ? $data['customerId'] : null;
        $this->container['customerIdForInvoice'] = isset($data['customerIdForInvoice']) ? $data['customerIdForInvoice'] : null;
        $this->container['customerName'] = isset($data['customerName']) ? $data['customerName'] : null;
        $this->container['deliveryAddress'] = isset($data['deliveryAddress']) ? $data['deliveryAddress'] : null;
        $this->container['deliveryAddressId'] = isset($data['deliveryAddressId']) ? $data['deliveryAddressId'] : null;
        $this->container['deliveryConditionDescription'] = isset($data['deliveryConditionDescription']) ? $data['deliveryConditionDescription'] : null;
        $this->container['deliveryConditionId'] = isset($data['deliveryConditionId']) ? $data['deliveryConditionId'] : null;
        $this->container['discountAmount'] = isset($data['discountAmount']) ? $data['discountAmount'] : null;
        $this->container['discountPercentage'] = isset($data['discountPercentage']) ? $data['discountPercentage'] : null;
        $this->container['fiscalYear'] = isset($data['fiscalYear']) ? $data['fiscalYear'] : null;
        $this->container['goodsFlowId'] = isset($data['goodsFlowId']) ? $data['goodsFlowId'] : null;
        $this->container['invoiceAddress'] = isset($data['invoiceAddress']) ? $data['invoiceAddress'] : null;
        $this->container['invoiceDate'] = isset($data['invoiceDate']) ? $data['invoiceDate'] : null;
        $this->container['invoiceId'] = isset($data['invoiceId']) ? $data['invoiceId'] : null;
        $this->container['isApproved'] = isset($data['isApproved']) ? $data['isApproved'] : null;
        $this->container['isBlocked'] = isset($data['isBlocked']) ? $data['isBlocked'] : null;
        $this->container['isBlockedByMargin'] = isset($data['isBlockedByMargin']) ? $data['isBlockedByMargin'] : null;
        $this->container['journalId'] = isset($data['journalId']) ? $data['journalId'] : null;
        $this->container['languageId'] = isset($data['languageId']) ? $data['languageId'] : null;
        $this->container['mainOrderId'] = isset($data['mainOrderId']) ? $data['mainOrderId'] : null;
        $this->container['orderDate'] = isset($data['orderDate']) ? $data['orderDate'] : null;
        $this->container['orderId'] = isset($data['orderId']) ? $data['orderId'] : null;
        $this->container['orderLines'] = isset($data['orderLines']) ? $data['orderLines'] : null;
        $this->container['orderType'] = isset($data['orderType']) ? $data['orderType'] : null;
        $this->container['orderVatLines'] = isset($data['orderVatLines']) ? $data['orderVatLines'] : null;
        $this->container['packages'] = isset($data['packages']) ? $data['packages'] : null;
        $this->container['pallets'] = isset($data['pallets']) ? $data['pallets'] : null;
        $this->container['paymentAmount1'] = isset($data['paymentAmount1']) ? $data['paymentAmount1'] : null;
        $this->container['paymentAmount2'] = isset($data['paymentAmount2']) ? $data['paymentAmount2'] : null;
        $this->container['paymentConditionDescription'] = isset($data['paymentConditionDescription']) ? $data['paymentConditionDescription'] : null;
        $this->container['paymentConditionId'] = isset($data['paymentConditionId']) ? $data['paymentConditionId'] : null;
        $this->container['paymentDiscountAmount'] = isset($data['paymentDiscountAmount']) ? $data['paymentDiscountAmount'] : null;
        $this->container['paymentDiscountPercentage'] = isset($data['paymentDiscountPercentage']) ? $data['paymentDiscountPercentage'] : null;
        $this->container['paymentId1'] = isset($data['paymentId1']) ? $data['paymentId1'] : null;
        $this->container['paymentId2'] = isset($data['paymentId2']) ? $data['paymentId2'] : null;
        $this->container['periodNumber'] = isset($data['periodNumber']) ? $data['periodNumber'] : null;
        $this->container['printCounter'] = isset($data['printCounter']) ? $data['printCounter'] : null;
        $this->container['processedBy'] = isset($data['processedBy']) ? $data['processedBy'] : null;
        $this->container['processedById'] = isset($data['processedById']) ? $data['processedById'] : null;
        $this->container['projectId'] = isset($data['projectId']) ? $data['projectId'] : null;
        $this->container['projectOrderInvoicingType'] = isset($data['projectOrderInvoicingType']) ? $data['projectOrderInvoicingType'] : null;
        $this->container['purchaseOrganizationMemberId'] = isset($data['purchaseOrganizationMemberId']) ? $data['purchaseOrganizationMemberId'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['regionId'] = isset($data['regionId']) ? $data['regionId'] : null;
        $this->container['shippingAgentId'] = isset($data['shippingAgentId']) ? $data['shippingAgentId'] : null;
        $this->container['stateId'] = isset($data['stateId']) ? $data['stateId'] : null;
        $this->container['statisticalSystemIdOfGoodsFlow'] = isset($data['statisticalSystemIdOfGoodsFlow']) ? $data['statisticalSystemIdOfGoodsFlow'] : null;
        $this->container['subscriptionId'] = isset($data['subscriptionId']) ? $data['subscriptionId'] : null;
        $this->container['totalMarginAmount'] = isset($data['totalMarginAmount']) ? $data['totalMarginAmount'] : null;
        $this->container['totalMarginPercentage'] = isset($data['totalMarginPercentage']) ? $data['totalMarginPercentage'] : null;
        $this->container['transactionTypeId'] = isset($data['transactionTypeId']) ? $data['transactionTypeId'] : null;
        $this->container['transportById'] = isset($data['transportById']) ? $data['transportById'] : null;
        $this->container['vatAmount'] = isset($data['vatAmount']) ? $data['vatAmount'] : null;
        $this->container['vatScenarioId'] = isset($data['vatScenarioId']) ? $data['vatScenarioId'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountManager
     *
     * @return string|null
     */
    public function getAccountManager()
    {
        return $this->container['accountManager'];
    }

    /**
     * Sets accountManager
     *
     * @param string|null $accountManager accountManager
     *
     * @return $this
     */
    public function setAccountManager($accountManager)
    {
        $this->container['accountManager'] = $accountManager;

        return $this;
    }

    /**
     * Gets accountManagerId
     *
     * @return string|null
     */
    public function getAccountManagerId()
    {
        return $this->container['accountManagerId'];
    }

    /**
     * Sets accountManagerId
     *
     * @param string|null $accountManagerId accountManagerId
     *
     * @return $this
     */
    public function setAccountManagerId($accountManagerId)
    {
        $this->container['accountManagerId'] = $accountManagerId;

        return $this;
    }

    /**
     * Gets amountExclVat
     *
     * @return float|null
     */
    public function getAmountExclVat()
    {
        return $this->container['amountExclVat'];
    }

    /**
     * Sets amountExclVat
     *
     * @param float|null $amountExclVat amountExclVat
     *
     * @return $this
     */
    public function setAmountExclVat($amountExclVat)
    {
        $this->container['amountExclVat'] = $amountExclVat;

        return $this;
    }

    /**
     * Gets amountInclVat
     *
     * @return float|null
     */
    public function getAmountInclVat()
    {
        return $this->container['amountInclVat'];
    }

    /**
     * Sets amountInclVat
     *
     * @param float|null $amountInclVat amountInclVat
     *
     * @return $this
     */
    public function setAmountInclVat($amountInclVat)
    {
        $this->container['amountInclVat'] = $amountInclVat;

        return $this;
    }

    /**
     * Gets cargoWeight
     *
     * @return float|null
     */
    public function getCargoWeight()
    {
        return $this->container['cargoWeight'];
    }

    /**
     * Sets cargoWeight
     *
     * @param float|null $cargoWeight cargoWeight
     *
     * @return $this
     */
    public function setCargoWeight($cargoWeight)
    {
        $this->container['cargoWeight'] = $cargoWeight;

        return $this;
    }

    /**
     * Gets chargeVatType
     *
     * @return int|null
     */
    public function getChargeVatType()
    {
        return $this->container['chargeVatType'];
    }

    /**
     * Sets chargeVatType
     *
     * @param int|null $chargeVatType chargeVatType
     *
     * @return $this
     */
    public function setChargeVatType($chargeVatType)
    {
        $this->container['chargeVatType'] = $chargeVatType;

        return $this;
    }

    /**
     * Gets collectiveInvoiceSystemId
     *
     * @return string|null
     */
    public function getCollectiveInvoiceSystemId()
    {
        return $this->container['collectiveInvoiceSystemId'];
    }

    /**
     * Sets collectiveInvoiceSystemId
     *
     * @param string|null $collectiveInvoiceSystemId collectiveInvoiceSystemId
     *
     * @return $this
     */
    public function setCollectiveInvoiceSystemId($collectiveInvoiceSystemId)
    {
        $this->container['collectiveInvoiceSystemId'] = $collectiveInvoiceSystemId;

        return $this;
    }

    /**
     * Gets contactPerson
     *
     * @return string|null
     */
    public function getContactPerson()
    {
        return $this->container['contactPerson'];
    }

    /**
     * Sets contactPerson
     *
     * @param string|null $contactPerson contactPerson
     *
     * @return $this
     */
    public function setContactPerson($contactPerson)
    {
        $this->container['contactPerson'] = $contactPerson;

        return $this;
    }

    /**
     * Gets contactPersonId
     *
     * @return string|null
     */
    public function getContactPersonId()
    {
        return $this->container['contactPersonId'];
    }

    /**
     * Sets contactPersonId
     *
     * @param string|null $contactPersonId contactPersonId
     *
     * @return $this
     */
    public function setContactPersonId($contactPersonId)
    {
        $this->container['contactPersonId'] = $contactPersonId;

        return $this;
    }

    /**
     * Gets costCentreId
     *
     * @return string|null
     */
    public function getCostCentreId()
    {
        return $this->container['costCentreId'];
    }

    /**
     * Sets costCentreId
     *
     * @param string|null $costCentreId costCentreId
     *
     * @return $this
     */
    public function setCostCentreId($costCentreId)
    {
        $this->container['costCentreId'] = $costCentreId;

        return $this;
    }

    /**
     * Gets costUnitId
     *
     * @return string|null
     */
    public function getCostUnitId()
    {
        return $this->container['costUnitId'];
    }

    /**
     * Sets costUnitId
     *
     * @param string|null $costUnitId costUnitId
     *
     * @return $this
     */
    public function setCostUnitId($costUnitId)
    {
        $this->container['costUnitId'] = $costUnitId;

        return $this;
    }

    /**
     * Gets countryOfDestinationId
     *
     * @return string|null
     */
    public function getCountryOfDestinationId()
    {
        return $this->container['countryOfDestinationId'];
    }

    /**
     * Sets countryOfDestinationId
     *
     * @param string|null $countryOfDestinationId countryOfDestinationId
     *
     * @return $this
     */
    public function setCountryOfDestinationId($countryOfDestinationId)
    {
        $this->container['countryOfDestinationId'] = $countryOfDestinationId;

        return $this;
    }

    /**
     * Gets creditSqueezeAmount
     *
     * @return float|null
     */
    public function getCreditSqueezeAmount()
    {
        return $this->container['creditSqueezeAmount'];
    }

    /**
     * Sets creditSqueezeAmount
     *
     * @param float|null $creditSqueezeAmount creditSqueezeAmount
     *
     * @return $this
     */
    public function setCreditSqueezeAmount($creditSqueezeAmount)
    {
        $this->container['creditSqueezeAmount'] = $creditSqueezeAmount;

        return $this;
    }

    /**
     * Gets creditSqueezePercentage
     *
     * @return float|null
     */
    public function getCreditSqueezePercentage()
    {
        return $this->container['creditSqueezePercentage'];
    }

    /**
     * Sets creditSqueezePercentage
     *
     * @param float|null $creditSqueezePercentage creditSqueezePercentage
     *
     * @return $this
     */
    public function setCreditSqueezePercentage($creditSqueezePercentage)
    {
        $this->container['creditSqueezePercentage'] = $creditSqueezePercentage;

        return $this;
    }

    /**
     * Gets currencyDescription
     *
     * @return string|null
     */
    public function getCurrencyDescription()
    {
        return $this->container['currencyDescription'];
    }

    /**
     * Sets currencyDescription
     *
     * @param string|null $currencyDescription currencyDescription
     *
     * @return $this
     */
    public function setCurrencyDescription($currencyDescription)
    {
        $this->container['currencyDescription'] = $currencyDescription;

        return $this;
    }

    /**
     * Gets currencyId
     *
     * @return string|null
     */
    public function getCurrencyId()
    {
        return $this->container['currencyId'];
    }

    /**
     * Sets currencyId
     *
     * @param string|null $currencyId currencyId
     *
     * @return $this
     */
    public function setCurrencyId($currencyId)
    {
        $this->container['currencyId'] = $currencyId;

        return $this;
    }

    /**
     * Gets currencyIsoCurrencyId
     *
     * @return string|null
     */
    public function getCurrencyIsoCurrencyId()
    {
        return $this->container['currencyIsoCurrencyId'];
    }

    /**
     * Sets currencyIsoCurrencyId
     *
     * @param string|null $currencyIsoCurrencyId currencyIsoCurrencyId
     *
     * @return $this
     */
    public function setCurrencyIsoCurrencyId($currencyIsoCurrencyId)
    {
        $this->container['currencyIsoCurrencyId'] = $currencyIsoCurrencyId;

        return $this;
    }

    /**
     * Gets customerId
     *
     * @return string|null
     */
    public function getCustomerId()
    {
        return $this->container['customerId'];
    }

    /**
     * Sets customerId
     *
     * @param string|null $customerId customerId
     *
     * @return $this
     */
    public function setCustomerId($customerId)
    {
        $this->container['customerId'] = $customerId;

        return $this;
    }

    /**
     * Gets customerIdForInvoice
     *
     * @return string|null
     */
    public function getCustomerIdForInvoice()
    {
        return $this->container['customerIdForInvoice'];
    }

    /**
     * Sets customerIdForInvoice
     *
     * @param string|null $customerIdForInvoice customerIdForInvoice
     *
     * @return $this
     */
    public function setCustomerIdForInvoice($customerIdForInvoice)
    {
        $this->container['customerIdForInvoice'] = $customerIdForInvoice;

        return $this;
    }

    /**
     * Gets customerName
     *
     * @return string|null
     */
    public function getCustomerName()
    {
        return $this->container['customerName'];
    }

    /**
     * Sets customerName
     *
     * @param string|null $customerName customerName
     *
     * @return $this
     */
    public function setCustomerName($customerName)
    {
        $this->container['customerName'] = $customerName;

        return $this;
    }

    /**
     * Gets deliveryAddress
     *
     * @return string|null
     */
    public function getDeliveryAddress()
    {
        return $this->container['deliveryAddress'];
    }

    /**
     * Sets deliveryAddress
     *
     * @param string|null $deliveryAddress deliveryAddress
     *
     * @return $this
     */
    public function setDeliveryAddress($deliveryAddress)
    {
        $this->container['deliveryAddress'] = $deliveryAddress;

        return $this;
    }

    /**
     * Gets deliveryAddressId
     *
     * @return int|null
     */
    public function getDeliveryAddressId()
    {
        return $this->container['deliveryAddressId'];
    }

    /**
     * Sets deliveryAddressId
     *
     * @param int|null $deliveryAddressId deliveryAddressId
     *
     * @return $this
     */
    public function setDeliveryAddressId($deliveryAddressId)
    {
        $this->container['deliveryAddressId'] = $deliveryAddressId;

        return $this;
    }

    /**
     * Gets deliveryConditionDescription
     *
     * @return string|null
     */
    public function getDeliveryConditionDescription()
    {
        return $this->container['deliveryConditionDescription'];
    }

    /**
     * Sets deliveryConditionDescription
     *
     * @param string|null $deliveryConditionDescription deliveryConditionDescription
     *
     * @return $this
     */
    public function setDeliveryConditionDescription($deliveryConditionDescription)
    {
        $this->container['deliveryConditionDescription'] = $deliveryConditionDescription;

        return $this;
    }

    /**
     * Gets deliveryConditionId
     *
     * @return string|null
     */
    public function getDeliveryConditionId()
    {
        return $this->container['deliveryConditionId'];
    }

    /**
     * Sets deliveryConditionId
     *
     * @param string|null $deliveryConditionId deliveryConditionId
     *
     * @return $this
     */
    public function setDeliveryConditionId($deliveryConditionId)
    {
        $this->container['deliveryConditionId'] = $deliveryConditionId;

        return $this;
    }

    /**
     * Gets discountAmount
     *
     * @return float|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     *
     * @param float|null $discountAmount discountAmount
     *
     * @return $this
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets discountPercentage
     *
     * @return float|null
     */
    public function getDiscountPercentage()
    {
        return $this->container['discountPercentage'];
    }

    /**
     * Sets discountPercentage
     *
     * @param float|null $discountPercentage discountPercentage
     *
     * @return $this
     */
    public function setDiscountPercentage($discountPercentage)
    {
        $this->container['discountPercentage'] = $discountPercentage;

        return $this;
    }

    /**
     * Gets fiscalYear
     *
     * @return int|null
     */
    public function getFiscalYear()
    {
        return $this->container['fiscalYear'];
    }

    /**
     * Sets fiscalYear
     *
     * @param int|null $fiscalYear fiscalYear
     *
     * @return $this
     */
    public function setFiscalYear($fiscalYear)
    {
        $this->container['fiscalYear'] = $fiscalYear;

        return $this;
    }

    /**
     * Gets goodsFlowId
     *
     * @return int|null
     */
    public function getGoodsFlowId()
    {
        return $this->container['goodsFlowId'];
    }

    /**
     * Sets goodsFlowId
     *
     * @param int|null $goodsFlowId goodsFlowId
     *
     * @return $this
     */
    public function setGoodsFlowId($goodsFlowId)
    {
        $this->container['goodsFlowId'] = $goodsFlowId;

        return $this;
    }

    /**
     * Gets invoiceAddress
     *
     * @return string|null
     */
    public function getInvoiceAddress()
    {
        return $this->container['invoiceAddress'];
    }

    /**
     * Sets invoiceAddress
     *
     * @param string|null $invoiceAddress invoiceAddress
     *
     * @return $this
     */
    public function setInvoiceAddress($invoiceAddress)
    {
        $this->container['invoiceAddress'] = $invoiceAddress;

        return $this;
    }

    /**
     * Gets invoiceDate
     *
     * @return string|null
     */
    public function getInvoiceDate()
    {
        return $this->container['invoiceDate'];
    }

    /**
     * Sets invoiceDate
     *
     * @param string|null $invoiceDate invoiceDate
     *
     * @return $this
     */
    public function setInvoiceDate($invoiceDate)
    {
        $this->container['invoiceDate'] = $invoiceDate;

        return $this;
    }

    /**
     * Gets invoiceId
     *
     * @return string|null
     */
    public function getInvoiceId()
    {
        return $this->container['invoiceId'];
    }

    /**
     * Sets invoiceId
     *
     * @param string|null $invoiceId invoiceId
     *
     * @return $this
     */
    public function setInvoiceId($invoiceId)
    {
        $this->container['invoiceId'] = $invoiceId;

        return $this;
    }

    /**
     * Gets isApproved
     *
     * @return bool|null
     */
    public function getIsApproved()
    {
        return $this->container['isApproved'];
    }

    /**
     * Sets isApproved
     *
     * @param bool|null $isApproved isApproved
     *
     * @return $this
     */
    public function setIsApproved($isApproved)
    {
        $this->container['isApproved'] = $isApproved;

        return $this;
    }

    /**
     * Gets isBlocked
     *
     * @return bool|null
     */
    public function getIsBlocked()
    {
        return $this->container['isBlocked'];
    }

    /**
     * Sets isBlocked
     *
     * @param bool|null $isBlocked isBlocked
     *
     * @return $this
     */
    public function setIsBlocked($isBlocked)
    {
        $this->container['isBlocked'] = $isBlocked;

        return $this;
    }

    /**
     * Gets isBlockedByMargin
     *
     * @return bool|null
     */
    public function getIsBlockedByMargin()
    {
        return $this->container['isBlockedByMargin'];
    }

    /**
     * Sets isBlockedByMargin
     *
     * @param bool|null $isBlockedByMargin isBlockedByMargin
     *
     * @return $this
     */
    public function setIsBlockedByMargin($isBlockedByMargin)
    {
        $this->container['isBlockedByMargin'] = $isBlockedByMargin;

        return $this;
    }

    /**
     * Gets journalId
     *
     * @return string|null
     */
    public function getJournalId()
    {
        return $this->container['journalId'];
    }

    /**
     * Sets journalId
     *
     * @param string|null $journalId journalId
     *
     * @return $this
     */
    public function setJournalId($journalId)
    {
        $this->container['journalId'] = $journalId;

        return $this;
    }

    /**
     * Gets languageId
     *
     * @return string|null
     */
    public function getLanguageId()
    {
        return $this->container['languageId'];
    }

    /**
     * Sets languageId
     *
     * @param string|null $languageId languageId
     *
     * @return $this
     */
    public function setLanguageId($languageId)
    {
        $this->container['languageId'] = $languageId;

        return $this;
    }

    /**
     * Gets mainOrderId
     *
     * @return string|null
     */
    public function getMainOrderId()
    {
        return $this->container['mainOrderId'];
    }

    /**
     * Sets mainOrderId
     *
     * @param string|null $mainOrderId mainOrderId
     *
     * @return $this
     */
    public function setMainOrderId($mainOrderId)
    {
        $this->container['mainOrderId'] = $mainOrderId;

        return $this;
    }

    /**
     * Gets orderDate
     *
     * @return string|null
     */
    public function getOrderDate()
    {
        return $this->container['orderDate'];
    }

    /**
     * Sets orderDate
     *
     * @param string|null $orderDate orderDate
     *
     * @return $this
     */
    public function setOrderDate($orderDate)
    {
        $this->container['orderDate'] = $orderDate;

        return $this;
    }

    /**
     * Gets orderId
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['orderId'];
    }

    /**
     * Sets orderId
     *
     * @param string|null $orderId orderId
     *
     * @return $this
     */
    public function setOrderId($orderId)
    {
        $this->container['orderId'] = $orderId;

        return $this;
    }

    /**
     * Gets orderLines
     *
     * @return \Seacommerce\Unit4\Multivers\Sdk\Model\OrderLineInfo[]|null
     */
    public function getOrderLines()
    {
        return $this->container['orderLines'];
    }

    /**
     * Sets orderLines
     *
     * @param \Seacommerce\Unit4\Multivers\Sdk\Model\OrderLineInfo[]|null $orderLines orderLines
     *
     * @return $this
     */
    public function setOrderLines($orderLines)
    {
        $this->container['orderLines'] = $orderLines;

        return $this;
    }

    /**
     * Gets orderType
     *
     * @return string|null
     */
    public function getOrderType()
    {
        return $this->container['orderType'];
    }

    /**
     * Sets orderType
     *
     * @param string|null $orderType orderType
     *
     * @return $this
     */
    public function setOrderType($orderType)
    {
        $this->container['orderType'] = $orderType;

        return $this;
    }

    /**
     * Gets orderVatLines
     *
     * @return \Seacommerce\Unit4\Multivers\Sdk\Model\OrderVatLineInfo[]|null
     */
    public function getOrderVatLines()
    {
        return $this->container['orderVatLines'];
    }

    /**
     * Sets orderVatLines
     *
     * @param \Seacommerce\Unit4\Multivers\Sdk\Model\OrderVatLineInfo[]|null $orderVatLines orderVatLines
     *
     * @return $this
     */
    public function setOrderVatLines($orderVatLines)
    {
        $this->container['orderVatLines'] = $orderVatLines;

        return $this;
    }

    /**
     * Gets packages
     *
     * @return int|null
     */
    public function getPackages()
    {
        return $this->container['packages'];
    }

    /**
     * Sets packages
     *
     * @param int|null $packages packages
     *
     * @return $this
     */
    public function setPackages($packages)
    {
        $this->container['packages'] = $packages;

        return $this;
    }

    /**
     * Gets pallets
     *
     * @return int|null
     */
    public function getPallets()
    {
        return $this->container['pallets'];
    }

    /**
     * Sets pallets
     *
     * @param int|null $pallets pallets
     *
     * @return $this
     */
    public function setPallets($pallets)
    {
        $this->container['pallets'] = $pallets;

        return $this;
    }

    /**
     * Gets paymentAmount1
     *
     * @return float|null
     */
    public function getPaymentAmount1()
    {
        return $this->container['paymentAmount1'];
    }

    /**
     * Sets paymentAmount1
     *
     * @param float|null $paymentAmount1 paymentAmount1
     *
     * @return $this
     */
    public function setPaymentAmount1($paymentAmount1)
    {
        $this->container['paymentAmount1'] = $paymentAmount1;

        return $this;
    }

    /**
     * Gets paymentAmount2
     *
     * @return float|null
     */
    public function getPaymentAmount2()
    {
        return $this->container['paymentAmount2'];
    }

    /**
     * Sets paymentAmount2
     *
     * @param float|null $paymentAmount2 paymentAmount2
     *
     * @return $this
     */
    public function setPaymentAmount2($paymentAmount2)
    {
        $this->container['paymentAmount2'] = $paymentAmount2;

        return $this;
    }

    /**
     * Gets paymentConditionDescription
     *
     * @return string|null
     */
    public function getPaymentConditionDescription()
    {
        return $this->container['paymentConditionDescription'];
    }

    /**
     * Sets paymentConditionDescription
     *
     * @param string|null $paymentConditionDescription paymentConditionDescription
     *
     * @return $this
     */
    public function setPaymentConditionDescription($paymentConditionDescription)
    {
        $this->container['paymentConditionDescription'] = $paymentConditionDescription;

        return $this;
    }

    /**
     * Gets paymentConditionId
     *
     * @return string|null
     */
    public function getPaymentConditionId()
    {
        return $this->container['paymentConditionId'];
    }

    /**
     * Sets paymentConditionId
     *
     * @param string|null $paymentConditionId paymentConditionId
     *
     * @return $this
     */
    public function setPaymentConditionId($paymentConditionId)
    {
        $this->container['paymentConditionId'] = $paymentConditionId;

        return $this;
    }

    /**
     * Gets paymentDiscountAmount
     *
     * @return float|null
     */
    public function getPaymentDiscountAmount()
    {
        return $this->container['paymentDiscountAmount'];
    }

    /**
     * Sets paymentDiscountAmount
     *
     * @param float|null $paymentDiscountAmount paymentDiscountAmount
     *
     * @return $this
     */
    public function setPaymentDiscountAmount($paymentDiscountAmount)
    {
        $this->container['paymentDiscountAmount'] = $paymentDiscountAmount;

        return $this;
    }

    /**
     * Gets paymentDiscountPercentage
     *
     * @return float|null
     */
    public function getPaymentDiscountPercentage()
    {
        return $this->container['paymentDiscountPercentage'];
    }

    /**
     * Sets paymentDiscountPercentage
     *
     * @param float|null $paymentDiscountPercentage paymentDiscountPercentage
     *
     * @return $this
     */
    public function setPaymentDiscountPercentage($paymentDiscountPercentage)
    {
        $this->container['paymentDiscountPercentage'] = $paymentDiscountPercentage;

        return $this;
    }

    /**
     * Gets paymentId1
     *
     * @return string|null
     */
    public function getPaymentId1()
    {
        return $this->container['paymentId1'];
    }

    /**
     * Sets paymentId1
     *
     * @param string|null $paymentId1 paymentId1
     *
     * @return $this
     */
    public function setPaymentId1($paymentId1)
    {
        $this->container['paymentId1'] = $paymentId1;

        return $this;
    }

    /**
     * Gets paymentId2
     *
     * @return string|null
     */
    public function getPaymentId2()
    {
        return $this->container['paymentId2'];
    }

    /**
     * Sets paymentId2
     *
     * @param string|null $paymentId2 paymentId2
     *
     * @return $this
     */
    public function setPaymentId2($paymentId2)
    {
        $this->container['paymentId2'] = $paymentId2;

        return $this;
    }

    /**
     * Gets periodNumber
     *
     * @return int|null
     */
    public function getPeriodNumber()
    {
        return $this->container['periodNumber'];
    }

    /**
     * Sets periodNumber
     *
     * @param int|null $periodNumber periodNumber
     *
     * @return $this
     */
    public function setPeriodNumber($periodNumber)
    {
        $this->container['periodNumber'] = $periodNumber;

        return $this;
    }

    /**
     * Gets printCounter
     *
     * @return int|null
     */
    public function getPrintCounter()
    {
        return $this->container['printCounter'];
    }

    /**
     * Sets printCounter
     *
     * @param int|null $printCounter printCounter
     *
     * @return $this
     */
    public function setPrintCounter($printCounter)
    {
        $this->container['printCounter'] = $printCounter;

        return $this;
    }

    /**
     * Gets processedBy
     *
     * @return string|null
     */
    public function getProcessedBy()
    {
        return $this->container['processedBy'];
    }

    /**
     * Sets processedBy
     *
     * @param string|null $processedBy processedBy
     *
     * @return $this
     */
    public function setProcessedBy($processedBy)
    {
        $this->container['processedBy'] = $processedBy;

        return $this;
    }

    /**
     * Gets processedById
     *
     * @return string|null
     */
    public function getProcessedById()
    {
        return $this->container['processedById'];
    }

    /**
     * Sets processedById
     *
     * @param string|null $processedById processedById
     *
     * @return $this
     */
    public function setProcessedById($processedById)
    {
        $this->container['processedById'] = $processedById;

        return $this;
    }

    /**
     * Gets projectId
     *
     * @return string|null
     */
    public function getProjectId()
    {
        return $this->container['projectId'];
    }

    /**
     * Sets projectId
     *
     * @param string|null $projectId projectId
     *
     * @return $this
     */
    public function setProjectId($projectId)
    {
        $this->container['projectId'] = $projectId;

        return $this;
    }

    /**
     * Gets projectOrderInvoicingType
     *
     * @return int|null
     */
    public function getProjectOrderInvoicingType()
    {
        return $this->container['projectOrderInvoicingType'];
    }

    /**
     * Sets projectOrderInvoicingType
     *
     * @param int|null $projectOrderInvoicingType projectOrderInvoicingType
     *
     * @return $this
     */
    public function setProjectOrderInvoicingType($projectOrderInvoicingType)
    {
        $this->container['projectOrderInvoicingType'] = $projectOrderInvoicingType;

        return $this;
    }

    /**
     * Gets purchaseOrganizationMemberId
     *
     * @return string|null
     */
    public function getPurchaseOrganizationMemberId()
    {
        return $this->container['purchaseOrganizationMemberId'];
    }

    /**
     * Sets purchaseOrganizationMemberId
     *
     * @param string|null $purchaseOrganizationMemberId purchaseOrganizationMemberId
     *
     * @return $this
     */
    public function setPurchaseOrganizationMemberId($purchaseOrganizationMemberId)
    {
        $this->container['purchaseOrganizationMemberId'] = $purchaseOrganizationMemberId;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets regionId
     *
     * @return int|null
     */
    public function getRegionId()
    {
        return $this->container['regionId'];
    }

    /**
     * Sets regionId
     *
     * @param int|null $regionId regionId
     *
     * @return $this
     */
    public function setRegionId($regionId)
    {
        $this->container['regionId'] = $regionId;

        return $this;
    }

    /**
     * Gets shippingAgentId
     *
     * @return string|null
     */
    public function getShippingAgentId()
    {
        return $this->container['shippingAgentId'];
    }

    /**
     * Sets shippingAgentId
     *
     * @param string|null $shippingAgentId shippingAgentId
     *
     * @return $this
     */
    public function setShippingAgentId($shippingAgentId)
    {
        $this->container['shippingAgentId'] = $shippingAgentId;

        return $this;
    }

    /**
     * Gets stateId
     *
     * @return string|null
     */
    public function getStateId()
    {
        return $this->container['stateId'];
    }

    /**
     * Sets stateId
     *
     * @param string|null $stateId stateId
     *
     * @return $this
     */
    public function setStateId($stateId)
    {
        $this->container['stateId'] = $stateId;

        return $this;
    }

    /**
     * Gets statisticalSystemIdOfGoodsFlow
     *
     * @return int|null
     */
    public function getStatisticalSystemIdOfGoodsFlow()
    {
        return $this->container['statisticalSystemIdOfGoodsFlow'];
    }

    /**
     * Sets statisticalSystemIdOfGoodsFlow
     *
     * @param int|null $statisticalSystemIdOfGoodsFlow statisticalSystemIdOfGoodsFlow
     *
     * @return $this
     */
    public function setStatisticalSystemIdOfGoodsFlow($statisticalSystemIdOfGoodsFlow)
    {
        $this->container['statisticalSystemIdOfGoodsFlow'] = $statisticalSystemIdOfGoodsFlow;

        return $this;
    }

    /**
     * Gets subscriptionId
     *
     * @return string|null
     */
    public function getSubscriptionId()
    {
        return $this->container['subscriptionId'];
    }

    /**
     * Sets subscriptionId
     *
     * @param string|null $subscriptionId subscriptionId
     *
     * @return $this
     */
    public function setSubscriptionId($subscriptionId)
    {
        $this->container['subscriptionId'] = $subscriptionId;

        return $this;
    }

    /**
     * Gets totalMarginAmount
     *
     * @return float|null
     */
    public function getTotalMarginAmount()
    {
        return $this->container['totalMarginAmount'];
    }

    /**
     * Sets totalMarginAmount
     *
     * @param float|null $totalMarginAmount totalMarginAmount
     *
     * @return $this
     */
    public function setTotalMarginAmount($totalMarginAmount)
    {
        $this->container['totalMarginAmount'] = $totalMarginAmount;

        return $this;
    }

    /**
     * Gets totalMarginPercentage
     *
     * @return float|null
     */
    public function getTotalMarginPercentage()
    {
        return $this->container['totalMarginPercentage'];
    }

    /**
     * Sets totalMarginPercentage
     *
     * @param float|null $totalMarginPercentage totalMarginPercentage
     *
     * @return $this
     */
    public function setTotalMarginPercentage($totalMarginPercentage)
    {
        $this->container['totalMarginPercentage'] = $totalMarginPercentage;

        return $this;
    }

    /**
     * Gets transactionTypeId
     *
     * @return int|null
     */
    public function getTransactionTypeId()
    {
        return $this->container['transactionTypeId'];
    }

    /**
     * Sets transactionTypeId
     *
     * @param int|null $transactionTypeId transactionTypeId
     *
     * @return $this
     */
    public function setTransactionTypeId($transactionTypeId)
    {
        $this->container['transactionTypeId'] = $transactionTypeId;

        return $this;
    }

    /**
     * Gets transportById
     *
     * @return int|null
     */
    public function getTransportById()
    {
        return $this->container['transportById'];
    }

    /**
     * Sets transportById
     *
     * @param int|null $transportById transportById
     *
     * @return $this
     */
    public function setTransportById($transportById)
    {
        $this->container['transportById'] = $transportById;

        return $this;
    }

    /**
     * Gets vatAmount
     *
     * @return float|null
     */
    public function getVatAmount()
    {
        return $this->container['vatAmount'];
    }

    /**
     * Sets vatAmount
     *
     * @param float|null $vatAmount vatAmount
     *
     * @return $this
     */
    public function setVatAmount($vatAmount)
    {
        $this->container['vatAmount'] = $vatAmount;

        return $this;
    }

    /**
     * Gets vatScenarioId
     *
     * @return int|null
     */
    public function getVatScenarioId()
    {
        return $this->container['vatScenarioId'];
    }

    /**
     * Sets vatScenarioId
     *
     * @param int|null $vatScenarioId vatScenarioId
     *
     * @return $this
     */
    public function setVatScenarioId($vatScenarioId)
    {
        $this->container['vatScenarioId'] = $vatScenarioId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


